FROM python:3.11-slim-bullseye

# Install build dependencies and essential utilities
RUN apt-get update && apt-get install -y \
    build-essential \
    file \
    binutils \
    xvfb \
    xauth \
    # Qt5 dependencies
    libgl1-mesa-dev \
    libglib2.0-0 \
    libxcb-icccm4 \
    libxcb-image0 \
    libxcb-keysyms1 \
    libxcb-randr0 \
    libxcb-render-util0 \
    libxcb-shape0 \
    libxcb-xfixes0 \
    libxcb-xinerama0 \
    libxcb-xkb1 \
    libxkbcommon-x11-0 \
    libxkbcommon0 \
    libxrender1 \
    # Qt5 development files
    libqt5gui5 \
    libqt5widgets5 \
    libqt5x11extras5-dev \
    qttools5-dev-tools \
    # Tkinter dependencies for splash screen
    python3-tk \
    tcl-dev \
    tk-dev \
    && rm -rf /var/lib/apt/lists/*

# Set up xvfb environment
ENV DISPLAY=:99
ENV PYTHONUNBUFFERED=1

# Set working directory
WORKDIR /app

# Add a script to wrap commands with xvfb-run
RUN echo '#!/bin/sh\nXvfb :99 -screen 0 1024x768x24 -ac +extension GLX +render -noreset 2>/dev/null &\nXVFB_PID=$!\n\n# Execute the command\n"$@"\nexit_code=$?\n\n# Clean up Xvfb\nkill $XVFB_PID 2>/dev/null\nwait $XVFB_PID 2>/dev/null\nexit $exit_code\n' > /usr/local/bin/xvfb-run-safe \
    && chmod +x /usr/local/bin/xvfb-run-safe

# Copy requirements first for better layer caching
COPY requirements.txt build_requirements.txt ./

# Install Python build dependencies
RUN pip install --no-cache-dir -r build_requirements.txt

# Copy the rest of the application
COPY . .

# The actual build will be done in the workflow
CMD ["/bin/bash"]
